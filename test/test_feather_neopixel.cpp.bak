#include <unity.h>
#include "config.h"

#ifdef USE_NEOPIXEL
#include "led_controller.h"

// Test NeoPixel functionality for Feather ESP32-S3 TFT
void test_neopixel_initialization(void) {
    // Test that NeoPixel initializes without crashing
    initializeLED();
    
    // Basic functionality test - should not crash
    TEST_ASSERT_TRUE(true); // If we reach here, initialization succeeded
}

void test_neopixel_color_setting(void) {
    // Test basic color setting functionality
    initializeLED();
    
    // Test primary colors
    setNeoPixelColor(255, 0, 0);   // Red
    delay(100);
    setNeoPixelColor(0, 255, 0);   // Green  
    delay(100);
    setNeoPixelColor(0, 0, 255);   // Blue
    delay(100);
    setNeoPixelColor(0, 0, 0);     // Off
    
    TEST_ASSERT_TRUE(true); // Test passes if no crashes occur
}

void test_neopixel_status_updates(void) {
    // Test status update functionality
    initializeLED();
    
    // Test different status updates
    updateLEDStatus(); // Should handle current mode status
    
    TEST_ASSERT_TRUE(true); // Test passes if no crashes occur
}

void test_neopixel_animation_effects(void) {
    // Test animation effects if available
    initializeLED();
    
    // Test breathing effect
    for (int i = 0; i < 5; i++) {
        setNeoPixelColor(i * 50, i * 50, i * 50);
        delay(50);
    }
    
    setNeoPixelColor(0, 0, 0); // Turn off
    TEST_ASSERT_TRUE(true);
}

#else

// Fallback tests for boards without NeoPixel
void test_standard_led_functionality(void) {
    // Test standard LED functionality for ESP32dev (mock implementation)
    bool led_init_success = true; // Mock LED initialization
    bool led_status_success = true; // Mock status update
    
    TEST_ASSERT_TRUE(led_init_success);
    TEST_ASSERT_TRUE(led_status_success); // Basic functionality test
}

#endif

// Common LED controller tests that work on both boards
void test_led_controller_initialization(void) {
    // Test that LED controller initializes properly on any board (mock)
    bool controller_ready = true; // Mock controller initialization
    TEST_ASSERT_TRUE(controller_ready);
}

void test_led_status_update_safety(void) {
    // Test that status updates are safe regardless of board type (mock)
    bool safe_update = true; // Mock safe update operation
    TEST_ASSERT_TRUE(safe_update);
}

// Main function removed - tests will be called from main test runner